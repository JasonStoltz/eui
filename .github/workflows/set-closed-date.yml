name: Set Closed Date

on:
  issues:
    types: [closed]

jobs:
  set-closed-date:
    runs-on: ubuntu-latest
    steps:
      - name: Set Closed Date in Project
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_TOKEN }}
          script: |
            const projectId = 'PVT_kwDOAGc3Zs4AIkji'; // Your project ID
            const fieldId = process.env.CLOSED_DATE_FIELD_ID;
            const issueNodeId = context.payload.issue.node_id;
            const closedAt = context.payload.issue.closed_at;
            
            if (!closedAt) {
              console.log('Issue does not have a closed_at date');
              return;
            }
            
            const closedDate = closedAt.split('T')[0];
            console.log(`Issue closed on: ${closedDate}`);
            
            // Find the project item for this issue
            const query = `
              query($projectId: ID!, $issueId: ID!) {
                node(id: $projectId) {
                  ... on ProjectV2 {
                    items(first: 100) {
                      nodes {
                        id
                        content {
                          ... on Issue {
                            id
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            
            const data = await github.graphql(query, {
              projectId,
              issueId: issueNodeId
            });
            
            const projectItem = data.node.items.nodes.find(
              item => item.content && item.content.id === issueNodeId
            );
            
            if (!projectItem) {
              console.log('Issue is not in the project, skipping');
              return;
            }
            
            console.log('Found issue in project, updating Closed Date...');
            
            // Update the Closed Date field
            const mutation = `
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $date: Date!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId
                  itemId: $itemId
                  fieldId: $fieldId
                  value: { date: $date }
                }) {
                  projectV2Item {
                    id
                  }
                }
              }
            `;
            
            await github.graphql(mutation, {
              projectId,
              itemId: projectItem.id,
              fieldId,
              date: closedDate
            });
            
            console.log('âœ“ Closed Date set successfully');
        env:
          CLOSED_DATE_FIELD_ID: 'PVTF_lADOAGc3Zs4AIkjizg3CFNk'

